.\" -*- mode: nroff -*-
.\"-
.\" Copyright © 2008, 2009, 2010, 2016, 2018, 2020
.\"	mirabilos <m@mirbsd.org>
.\" Copyright © 2020
.\"	mirabilos <t.glaser@tarent.de>
.\" Licensor: Deutsche Telekom
.\"
.\" Provided that these terms and disclaimer and all copyright notices
.\" are retained or reproduced in an accompanying document, permission
.\" is granted to deal in this work without restriction, including un‐
.\" limited rights to use, publicly perform, distribute, sell, modify,
.\" merge, give away, or sublicence.
.\"
.\" This work is provided “AS IS” and WITHOUT WARRANTY of any kind, to
.\" the utmost extent permitted by applicable law, neither express nor
.\" implied; without malicious intent or gross negligence. In no event
.\" may a licensor, author or contributor be held liable for indirect,
.\" direct, other damage, loss, or other issues arising in any way out
.\" of dealing in the work, even if advised of the possibility of such
.\" damage or existence of a defect, except proven that it results out
.\" of said person’s immediate fault when using the work as intended.
.\"-
.\" Try to make GNU groff and AT&T nroff more compatible
.\" * ` generates ‘ in gnroff, so use \`
.\" * ' generates ’ in gnroff, \' generates ´, so use \*(aq
.\" * - generates ‐ in gnroff, \- generates −, so .tr it to -
.\"   thus use - for hyphens and \- for minus signs and option dashes
.\" * ~ is size-reduced and placed atop in groff, so use \*(TI
.\" * ^ is size-reduced and placed atop in groff, so use \*(ha
.\" * \(en does not work in nroff, so use \*(en for a solo en dash
.\" *   and \*(EM for a correctly spaced em dash
.\" * <>| are problematic, so redefine and use \*(Lt\*(Gt\*(Ba
.\" Also make sure to use \& *before* a punctuation char that is to not
.\" be interpreted as punctuation, and especially with two-letter words
.\" but also (after) a period that does not end a sentence (“e.g.\&”).
.\" The section after the "doc" macropackage has been loaded contains
.\" additional code to convene between the UCB mdoc macropackage (and
.\" its variant as BSD mdoc in groff) and the GNU mdoc macropackage.
.\"
.ie \n(.g \{\
.	if \*[.T]ascii .tr \-\N'45'
.	if \*[.T]latin1 .tr \-\N'45'
.	if \*[.T]utf8 .tr \-\N'45'
.	ds <= \[<=]
.	ds >= \[>=]
.	ds Rq \[rq]
.	ds Lq \[lq]
.	ds sL \(aq
.	ds sR \(aq
.	if \*[.T]utf8 .ds sL `
.	if \*[.T]ps .ds sL `
.	if \*[.T]utf8 .ds sR '
.	if \*[.T]ps .ds sR '
.	ds aq \(aq
.	ds TI \(ti
.	ds ha \(ha
.	ds en \(en
.\}
.el \{\
.	ds aq '
.	ds TI ~
.	ds ha ^
.	ds en \(em
.\}
.ie n \{\
.	ds EM \ \*(en\ \&
.\}
.el \{\
.	ds EM \f(TR\^\(em\^\fP
.\}
.\"
.\" Implement .Dd with the Mdocdate RCS keyword
.\"
.rn Dd xD
.de Dd
.ie \\$1$Mdocdate: \{\
.	xD \\$2 \\$3, \\$4
.\}
.el .xD \\$1 \\$2 \\$3 \\$4 \\$5 \\$6 \\$7 \\$8
..
.\"
.\" .Dd must come before the macropackage-specific setup code.
.\"
.Dd $Mdocdate: April 4 2023 $
.\"
.\" Check which macro package we use, and do other -mdoc setup.
.\"
.ie \n(.g \{\
.	if \*[.T]utf8 .tr \[la]\*(Lt
.	if \*[.T]utf8 .tr \[ra]\*(Gt
.	ie d volume-ds-1 .ds tT gnu
.	el .ie d doc-volume-ds-1 .ds tT gnp
.	el .ds tT bsd
.\}
.el .ds tT ucb
.\"-
.Dt ECNBITS_STOAF 3
.Os ECN-Bits
.Sh NAME
.Nm ecnbits_mkcmsg ,
.Nm ecnbits_stoaf
.Nd ECN-Bits utility functions
.Sh SYNOPSIS
.In sys/types.h
.br
#if defined(_WIN32) \*(Ba\*(Ba defined(WIN32)
.br
.In winsock2.h
.In ws2tcpip.h
.br
#else
.br
.In sys/socket.h
.br
#endif
.br
.In ecn\-bitw.h
.Ft int
.Fn ecnbits_stoaf "SOCKET handle"
.Ft "void *"
.Fn ecnbits_mkcmsg "void *buf" "size_t *lenp" "int af" "unsigned char tc"
.Pp
.ie "\*(tT"gnu" .nr in-synopsis-section 0
.el .if "\*(tT"gnp" .nr doc-in-synopsis-section 0
.el .nr nS 0
.\" that above restored normal formatting for this Pp until next Sh
Outside of Winsock2, the
.Vt SOCKET
type is just an
.Vt int .
.Sh DESCRIPTION
The
.Fn ecnbits_stoaf
function determins the address family for a given socket
used with the ECN-Bits library.
Note that v4-mapped IPv6 sockets will (correctly) report as
.Dv AF_INET6 ,
not
.Dv AF_INET .
.Pp
The
.Fn ecnbits_mkcmsg
function fills in a buffer with control messages suitable for use with
.Xr sendmsg 2
to set the traffic class octet on an outgoing packet to
.Ar tc .
The
.Ar af
argument is expected to be the traffic class on the socket.
If the
.Ar buf
argument is
.Dv NULL ,
a buffer of suitable length is allocated dynamically, which the caller must
.Xr free 3 ;
otherwise, its length is expected in
.Ar *lenp .
In both cases,
.Ar *lenp
will be overwritten with the actual length of the data stored into the buffer.
.Pp
These functions are thread-safe (as long as the buffer is not shared).
.Sh RETURN VALUES
The
.Fn ecnbits_stoaf
function returns the socket address family (either
.Dv AF_INET
or
.Dv AF_INET6 )
if successful; otherwise the value \-1 is returned and the global variable
.Va errno
is set to indicate the error.
.Pp
The
.Fn ecnbits_mkcmsg
function returns the buffer (either its
.Ar buf
argument or the allocated one) if successful; otherwise the value
.Dv NULL
is returned and the global variable
.Va errno
is set to indicate the error.
.Pp
On Winsock2,
.Fn WSAGetLastError
must be used to retrieve the error code.
.Sh ERRORS
.Fn ecnbits_stoaf
returns any errors returned by
.Xr getsockname 2
as well as
.Er WSAEAFNOSUPPORT
if the socket is not of a supported address family.
.Pp
.Fn ecnbits_mkcmsg
returns any errors returned by
.Xr calloc 3
as well as
.Er ERANGE
if the passed
.Ar *lenp
is too small and
.Er EAFNOSUPPORT
if the socket is not of a supported address family
.Pq Li AF_INET No or Li AF_INET6 .
.Pp
Note: except on Winsock,
.Fn ecnbits_mkcmsg
is guaranteed to not fail if the address family is correct,
a buffer is given and of the appropriate size.
If a previous call to
.Fn ecnbits_mkcmsg
with the same address family allocated a buffer, and that buffer
and its size are reused, these conditions are fulfilled.
Within one program, the buffer size depends only on the address family.
.Sh SEE ALSO
.Xr getsockname 2 ,
.Xr cmsg 3 ,
.Xr ecnbits_prep 3 ,
.Xr ip 4 ,
.Xr ip6 4 ,
.Xr ip 7 ,
.Xr ipv6 7
.Sh AUTHORS
.An mirabilos Aq t.glaser@tarent.de
for Deutsche Telekom.
.Sh LICENCE
The MirOS Licence
.Pq short name : Li MirBSD
