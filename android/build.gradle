// Top-level build file where you can add configuration options common to all sub-projects/modules.

// project licence: refer to each module’s individual build.gradle file

buildscript {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
        // cf. https://youtrack.jetbrains.com/issue/IDEA-252823
        // and https://youtrack.jetbrains.com/issue/IDEA-252775
        //classpath 'com.android.tools.build:gradle:4.1.1'
        // 4.0.2 is also utterly unusable with IntelliJ IDEA ☹
        // cf. https://youtrack.jetbrains.com/issue/IDEA-258598
        //classpath 'com.android.tools.build:gradle:4.0.2'
        classpath 'com.android.tools.build:gradle:3.6.4'
        classpath 'com.google.android.gms:oss-licenses-plugin:0.10.3'
        classpath 'de.mannodermaus.gradle.plugins:android-junit5:1.7.1.1'
        classpath 'org.owasp:dependency-check-gradle:8.0.0'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }

    apply plugin: 'org.owasp.dependencycheck'
    dependencyCheck {
        failBuildOnCVSS = 8
        scanSet = [project.layout.projectDirectory.dir("src").asFile]
        skipConfigurations += 'lintClassPath'
    }
    // doesn’t work: tasks.findByName("check")?.dependsOn(dependencyCheckAnalyze)

    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:all"
        options.headerOutputDirectory.value(project.layout.buildDirectory.dir("headers/" + name))
    }

    tasks.withType(Test) {
        testLogging {
            outputs.upToDateWhen { false }
            showStandardStreams = true
            exceptionFormat = 'full'
        }
        systemProperty 'java.util.logging.config.file', file('src/test/resources/logging.properties').absolutePath
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
